blueprint:
  name: ESPHome Wizmote Receiver (Flexible)
  description: |-
    A more flexible version of the ESPHome Wizmote blueprint that
    adds many features. Key improvements include:

    - **Generic Device Slots:** Buttons 1-4 can control any combination of lights, switches, or fans.
    - **Optional Devices:** Not all device buttons need to be assigned.
    - **Fan High/Low Speed Control:** The up/down buttons can be configured to set fan speeds to a low and high percentage.
    - **Configurable Timeouts:** All delays and transition times are customizable through the blueprint UI.

    **NOTE:** This blueprint only handles device-specific controls. For default actions (e.g., pressing ON/OFF without selecting a device),
    you must use the "ESPHome Wizmote Default Behavior" companion blueprint.
  domain: automation
  source_url: https://github.com/jesserockz/wizmote-esphome/blob/main/wizmote-esphome-blueprint.yml
  input:
    remote:
      name: WizMote Mac address
      description: Mac address of the WizMote can be found by watching for
        the 'esphome.wizmote_choose' or 'esphome.wizmote_action' events
        as you press a button.
      selector:
        text:
    fan_low_speed:
      name: Fan Low Speed
      description: The speed percentage for the fan when the 'down' button is pressed.
      selector:
        number:
          min: 1
          max: 100
          unit_of_measurement: "%"
      default: 35
    fan_high_speed:
      name: Fan High Speed
      description: The speed percentage for the fan when the 'up' button is pressed.
      selector:
        number:
          min: 1
          max: 100
          unit_of_measurement: "%"
      default: 100
    selection_timeout:
      name: Device Selection Timeout
      description: The time in seconds before the selected device is forgotten.
      selector:
        number:
          min: 1
          max: 28800
          unit_of_measurement: s
      default: 3600
    brightness_step:
      name: Brightness step when pressing or holding dimmer buttons
      selector:
        number:
          min: 1
          max: 50
          unit_of_measurement: "%"
    device_one:
      name: Device 1
      description: The light, switch, or fan to control after pressing 1.
      selector:
        target:
          entity:
            domain: [light, switch, fan]
      default: {}
    device_two:
      name: Device 2
      description: The light, switch, or fan to control after pressing 2.
      selector:
        target:
          entity:
            domain: [light, switch, fan]
      default: {}
    device_three:
      name: Device 3
      description: The light, switch, or fan to control after pressing 3.
      selector:
        target:
          entity:
            domain: [light, switch, fan]
      default: {}
    device_four:
      name: Device 4
      description: The light, switch, or fan to control after pressing 4.
      selector:
        target:
          entity:
            domain: [light, switch, fan]
      default: {}

mode: restart

trigger:
  - platform: event
    event_type: esphome.wizmote_choose
    event_data:
      mac: !input "remote"

action:
  - variables:
      button: "{{ trigger.event.data.button | int }}"
      brightness_step: !input brightness_step
  - choose:
      - conditions: "{{ button == 1 }}"
        sequence:
          - variables:
              target_device: !input device_one
          - condition: template
            value_template: "{{ target_device != {} }}"
          - repeat:
              until: "{{ wait.trigger == none }}"
              sequence:
                - wait_for_trigger:
                    - platform: event
                      event_type: esphome.wizmote_action
                      event_data:
                        mac: !input "remote"
                  continue_on_timeout: false
                  timeout: !input selection_timeout
                - choose:
                    - conditions: "{{ wait.trigger.event.data.button | int == 1 }}"
                      sequence:
                        - service: homeassistant.turn_on
                          target: !input device_one
                    - conditions: "{{ wait.trigger.event.data.button | int == 2 }}"
                      sequence:
                        - service: homeassistant.turn_off
                          target: !input device_one
                    - conditions: "{{ wait.trigger.event.data.button | int == 8 }}"
                      sequence:
                        - parallel:
                            - service: light.turn_on
                              data:
                                brightness_step_pct: "{{ -(brightness_step | float) }}"
                              target: !input device_one
                            - service: fan.set_percentage
                              data:
                                percentage: !input fan_low_speed
                              target: !input device_one
                    - conditions: "{{ wait.trigger.event.data.button | int == 9 }}"
                      sequence:
                        - parallel:
                            - service: light.turn_on
                              data:
                                brightness_step_pct: "{{ brightness_step | float }}"
                              target: !input device_one
                            - service: fan.set_percentage
                              data:
                                percentage: !input fan_high_speed
                              target: !input device_one
      - conditions: "{{ button == 2 }}"
        sequence:
          - variables:
              target_device: !input device_two
          - condition: template
            value_template: "{{ target_device != {} }}"
          - repeat:
              until: "{{ wait.trigger == none }}"
              sequence:
                - wait_for_trigger:
                    - platform: event
                      event_type: esphome.wizmote_action
                      event_data:
                        mac: !input "remote"
                  continue_on_timeout: false
                  timeout: !input selection_timeout
                - choose:
                    - conditions: "{{ wait.trigger.event.data.button | int == 1 }}"
                      sequence:
                        - service: homeassistant.turn_on
                          target: !input device_two
                    - conditions: "{{ wait.trigger.event.data.button | int == 2 }}"
                      sequence:
                        - service: homeassistant.turn_off
                          target: !input device_two
                    - conditions: "{{ wait.trigger.event.data.button | int == 8 }}"
                      sequence:
                        - parallel:
                            - service: light.turn_on
                              data:
                                brightness_step_pct: "{{ -(brightness_step | float) }}"
                              target: !input device_two
                            - service: fan.set_percentage
                              data:
                                percentage: !input fan_low_speed
                              target: !input device_two
                    - conditions: "{{ wait.trigger.event.data.button | int == 9 }}"
                      sequence:
                        - parallel:
                            - service: light.turn_on
                              data:
                                brightness_step_pct: "{{ brightness_step | float }}"
                              target: !input device_two
                            - service: fan.set_percentage
                              data:
                                percentage: !input fan_high_speed
                              target: !input device_two
      - conditions: "{{ button == 3 }}"
        sequence:
          - variables:
              target_device: !input device_three
          - condition: template
            value_template: "{{ target_device != {} }}"
          - repeat:
              until: "{{ wait.trigger == none }}"
              sequence:
                - wait_for_trigger:
                    - platform: event
                      event_type: esphome.wizmote_action
                      event_data:
                        mac: !input "remote"
                  continue_on_timeout: false
                  timeout: !input selection_timeout
                - choose:
                    - conditions: "{{ wait.trigger.event.data.button | int == 1 }}"
                      sequence:
                        - service: homeassistant.turn_on
                          target: !input device_three
                    - conditions: "{{ wait.trigger.event.data.button | int == 2 }}"
                      sequence:
                        - service: homeassistant.turn_off
                          target: !input device_three
                    - conditions: "{{ wait.trigger.event.data.button | int == 8 }}"
                      sequence:
                        - parallel:
                            - service: light.turn_on
                              data:
                                brightness_step_pct: "{{ -(brightness_step | float) }}"
                              target: !input device_three
                            - service: fan.set_percentage
                              data:
                                percentage: !input fan_low_speed
                              target: !input device_three
                    - conditions: "{{ wait.trigger.event.data.button | int == 9 }}"
                      sequence:
                        - parallel:
                            - service: light.turn_on
                              data:
                                brightness_step_pct: "{{ brightness_step | float }}"
                              target: !input device_three
                            - service: fan.set_percentage
                              data:
                                percentage: !input fan_high_speed
                              target: !input device_three
      - conditions: "{{ button == 4 }}"
        sequence:
          - variables:
              target_device: !input device_four
          - condition: template
            value_template: "{{ target_device != {} }}"
          - repeat:
              until: "{{ wait.trigger == none }}"
              sequence:
                - wait_for_trigger:
                    - platform: event
                      event_type: esphome.wizmote_action
                      event_data:
                        mac: !input "remote"
                  continue_on_timeout: false
                  timeout: !input selection_timeout
                - choose:
                    - conditions: "{{ wait.trigger.event.data.button | int == 1 }}"
                      sequence:
                        - service: homeassistant.turn_on
                          target: !input device_four
                    - conditions: "{{ wait.trigger.event.data.button | int == 2 }}"
                      sequence:
                        - service: homeassistant.turn_off
                          target: !input device_four
                    - conditions: "{{ wait.trigger.event.data.button | int == 8 }}"
                      sequence:
                        - parallel:
                            - service: light.turn_on
                              data:
                                brightness_step_pct: "{{ -(brightness_step | float) }}"
                              target: !input device_four
                            - service: fan.set_percentage
                              data:
                                percentage: !input fan_low_speed
                              target: !input device_four
                    - conditions: "{{ wait.trigger.event.data.button | int == 9 }}"
                      sequence:
                        - parallel:
                            - service: light.turn_on
                              data:
                                brightness_step_pct: "{{ brightness_step | float }}"
                              target: !input device_four
                            - service: fan.set_percentage
                              data:
                                percentage: !input fan_high_speed
                              target: !input device_four
